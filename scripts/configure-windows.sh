#!/bin/bash
# Windows-specific configuration for Live Transcripts
# This script is for Git Bash, WSL, or Cygwin on Windows

set -e

# Colors for output (may not work in all Windows terminals)
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_success() { echo -e "${GREEN}✓${NC} $1"; }
print_error() { echo -e "${RED}✗${NC} $1"; }
print_warning() { echo -e "${YELLOW}!${NC} $1"; }
print_info() { echo -e "${BLUE}ℹ${NC} $1"; }

# Detect Windows version
check_windows_version() {
    print_info "Detecting Windows version..."
    
    # Try to get Windows version
    if command -v cmd.exe &> /dev/null; then
        win_ver=$(cmd.exe /c ver 2>/dev/null | grep -oE "[0-9]+\.[0-9]+\.[0-9]+" | head -1)
        print_info "Windows version: $win_ver"
        
        # Check if Windows 10 or later (WASAPI loopback support)
        major_ver=$(echo "$win_ver" | cut -d. -f1)
        if [ "$major_ver" -ge 10 ]; then
            print_success "Windows 10+ detected - WASAPI loopback supported"
            return 0
        else
            print_warning "Older Windows version - audio capture may be limited"
            return 1
        fi
    else
        print_warning "Could not detect Windows version"
        return 1
    fi
}

# Check audio devices
check_audio_devices() {
    echo
    print_info "Windows Audio Configuration"
    echo
    print_success "Windows has built-in support for system audio capture via WASAPI"
    echo
    echo "No additional drivers needed! WASAPI loopback mode allows"
    echo "Live Transcripts to capture all system audio automatically."
    echo
    
    # Check if running in WSL
    if grep -qi microsoft /proc/version 2>/dev/null; then
        print_warning "Running in WSL detected"
        echo "Note: Audio capture works best when running natively on Windows"
        echo "Consider using Windows Terminal or PowerShell instead of WSL"
    fi
}

# Configure audio settings
configure_audio_settings() {
    echo
    print_info "Windows Audio Settings"
    echo
    echo "For best results:"
    echo "  1. Set your audio quality to high:"
    echo "     - Right-click speaker icon in system tray"
    echo "     - Select 'Sound settings'"
    echo "     - Click 'Device properties'"
    echo "     - Set format to '16 bit, 48000 Hz' or higher"
    echo
    echo "  2. Disable audio enhancements:"
    echo "     - In Device properties, click 'Additional device properties'"
    echo "     - Go to 'Enhancements' tab"
    echo "     - Check 'Disable all enhancements'"
    echo
    echo "  3. For recording specific applications:"
    echo "     - Windows captures ALL system audio by default"
    echo "     - Use Windows Volume Mixer to control individual apps"
    echo
    read -p "Press Enter when ready to continue..."
}

# Choose audio backend
choose_backend() {
    echo
    print_info "Available audio backends for Windows:"
    echo
    echo "   1) wasapi $(echo -e "${GREEN}← Recommended${NC}") - Native Windows audio"
    echo "   2) sounddevice - Good cross-platform option"
    echo "   3) pyaudio - Legacy option (more compatible)"
    echo "   4) auto $(echo -e "${GREEN}← Let Live Transcripts decide${NC}")"
    echo
    
    read -p "Select audio backend [1-4] (default: 4): " choice
    [ -z "$choice" ] && choice=4
    
    case "$choice" in
        1) echo "wasapi" ;;
        2) echo "sounddevice" ;;
        3) echo "pyaudio" ;;
        4|*) echo "auto" ;;
    esac
}

# Update configuration
update_config() {
    local backend="$1"
    
    echo
    print_info "Updating configuration..."
    
    if [ ! -f "config.yaml" ]; then
        cat > config.yaml << EOF
# Live Transcripts Configuration - Windows
# Auto-generated by configure-windows.sh

profile: windows

audio:
  backend_preference: $backend
  
# Run ./scripts/configure-windows.sh to reconfigure
EOF
        print_success "Created config.yaml"
    else
        # Update existing config
        if grep -q "backend_preference:" config.yaml; then
            sed -i "s/backend_preference:.*/backend_preference: $backend/" config.yaml
            print_success "Updated backend preference to: $backend"
        else
            # Add backend preference
            if grep -q "^audio:" config.yaml; then
                awk '/^audio:/ {print; print "  backend_preference: '$backend'"; next} 1' config.yaml > config.yaml.tmp
                mv config.yaml.tmp config.yaml
            else
                echo "" >> config.yaml
                echo "audio:" >> config.yaml
                echo "  backend_preference: $backend" >> config.yaml
            fi
            print_success "Added backend preference: $backend"
        fi
    fi
}

# Show Windows-specific tips
show_tips() {
    echo
    print_info "Windows Tips:"
    echo "  - WASAPI captures all system audio automatically"
    echo "  - No virtual cables or special routing needed"
    echo "  - Works with all applications (Zoom, Teams, browsers, etc.)"
    echo "  - For best quality, use 48kHz sample rate in Windows settings"
    echo
    print_info "Troubleshooting:"
    echo "  - No audio captured? Check Windows privacy settings"
    echo "  - Go to Settings → Privacy → Microphone"
    echo "  - Allow apps to access your microphone"
    echo "  - Try running as Administrator if issues persist"
    echo
    print_info "Performance tips:"
    echo "  - Close unnecessary audio applications"
    echo "  - Disable Windows audio enhancements"
    echo "  - Use wired headphones instead of Bluetooth for lower latency"
}

# Check Python installation
check_python() {
    echo
    print_info "Checking Python installation..."
    
    # Check if Python is accessible
    if command -v python &> /dev/null; then
        py_ver=$(python --version 2>&1)
        print_success "Python found: $py_ver"
    elif command -v python3 &> /dev/null; then
        py_ver=$(python3 --version 2>&1)
        print_success "Python3 found: $py_ver"
    else
        print_error "Python not found in PATH"
        echo
        echo "Please ensure Python is installed and added to PATH:"
        echo "  1. Download from https://python.org"
        echo "  2. During installation, check 'Add Python to PATH'"
        echo "  3. Restart your terminal"
    fi
}

# Main
main() {
    echo "🪟 Windows Audio Configuration for Live Transcripts"
    echo "==================================================="
    
    # Check Windows version
    check_windows_version
    
    # Check Python
    check_python
    
    # Check audio devices
    check_audio_devices
    
    # Configure audio settings
    configure_audio_settings
    
    # Choose backend
    selected_backend=$(choose_backend)
    print_success "Selected backend: $selected_backend"
    
    # Update configuration
    update_config "$selected_backend"
    
    # Show tips
    show_tips
    
    echo
    print_success "Windows audio configuration complete! 🎉"
    echo
    print_info "Next: Run 'python -m src.livetranscripts.main' to start!"
}

# Run main
main "$@"