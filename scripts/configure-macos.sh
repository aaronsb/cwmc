#!/bin/bash
# macOS-specific configuration for Live Transcripts

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_success() { echo -e "${GREEN}‚úì${NC} $1"; }
print_error() { echo -e "${RED}‚úó${NC} $1"; }
print_warning() { echo -e "${YELLOW}!${NC} $1"; }
print_info() { echo -e "${BLUE}‚Ñπ${NC} $1"; }

# Check macOS version
check_macos_version() {
    local version=$(sw_vers -productVersion)
    local major=$(echo "$version" | cut -d. -f1)
    local minor=$(echo "$version" | cut -d. -f2)
    
    print_info "macOS version: $version"
    
    if [ "$major" -lt 11 ] && [ "$major" -eq 10 ] && [ "$minor" -lt 15 ]; then
        print_warning "macOS 10.15 (Catalina) or later recommended"
    fi
}

# Check BlackHole installation
check_blackhole() {
    echo
    print_info "Checking for BlackHole audio driver..."
    
    if system_profiler SPAudioDataType 2>/dev/null | grep -q "BlackHole"; then
        print_success "BlackHole audio driver detected"
        
        # Check BlackHole version and channels
        blackhole_info=$(system_profiler SPAudioDataType | grep -A 5 "BlackHole" | head -6)
        echo "$blackhole_info" | grep -E "(2ch|16ch|64ch)" | while read -r line; do
            print_info "  Found: $line"
        done
        
        return 0
    else
        print_error "BlackHole not detected"
        return 1
    fi
}

# Setup BlackHole
setup_blackhole() {
    echo
    print_warning "BlackHole is required for system audio capture on macOS"
    echo
    print_info "Installation options:"
    echo "  1) Install via Homebrew (recommended):"
    echo "     brew install blackhole-2ch"
    echo
    echo "  2) Download from official website:"
    echo "     https://github.com/ExistentialAudio/BlackHole"
    echo
    read -p "Would you like to install BlackHole via Homebrew now? (y/n) " -n 1 -r
    echo
    
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        if command -v brew &> /dev/null; then
            print_info "Installing BlackHole..."
            brew install blackhole-2ch
            print_success "BlackHole installed"
        else
            print_error "Homebrew not found"
            print_info "Install Homebrew from https://brew.sh"
        fi
    fi
}

# Configure Multi-Output Device
configure_multi_output() {
    echo
    print_info "Multi-Output Device Setup"
    echo
    print_warning "CRITICAL: You must create a Multi-Output Device for audio capture to work!"
    echo
    echo "Steps to create Multi-Output Device:"
    echo "  1. Open Audio MIDI Setup (press Cmd+Space, search 'Audio MIDI Setup')"
    echo "  2. Click the '+' button in the bottom left"
    echo "  3. Select 'Create Multi-Output Device'"
    echo "  4. Check these boxes:"
    echo "     ‚úÖ BlackHole 2ch"
    echo "     ‚úÖ Your speakers/headphones (e.g., 'MacBook Pro Speakers')"
    echo "  5. Name it: 'Live Transcripts Setup'"
    echo "  6. Right-click and select 'Use This Device For Sound Output'"
    echo
    echo "IMPORTANT: Always use 'Live Transcripts Setup' as your output device"
    echo "when using Live Transcripts!"
    echo
    read -p "Press Enter when you've completed the setup..."
}

# Check audio setup
verify_audio_setup() {
    echo
    print_info "Verifying audio setup..."
    
    # Check current audio output
    current_output=$(system_profiler SPAudioDataType | grep -A 1 "Default Output Device:" | tail -1 | xargs)
    print_info "Current output device: $current_output"
    
    if [[ "$current_output" == *"Multi-Output Device"* ]] || [[ "$current_output" == *"Live Transcripts"* ]]; then
        print_success "Multi-Output Device is active"
    else
        print_warning "Multi-Output Device is not the current output"
        print_info "Remember to switch to it before using Live Transcripts"
    fi
}

# Choose audio backend
choose_backend() {
    echo
    print_info "Available audio backends for macOS:"
    echo
    echo "   1) blackhole $(echo -e "${GREEN}‚Üê Recommended${NC}") - Best for system audio"
    echo "   2) sounddevice - Good cross-platform option"
    echo "   3) pyaudio - Legacy option (may work better on older macOS)"
    echo "   4) auto $(echo -e "${GREEN}‚Üê Let Live Transcripts decide${NC}")"
    echo
    
    read -p "Select audio backend [1-4] (default: 4): " choice
    [ -z "$choice" ] && choice=4
    
    case "$choice" in
        1) echo "blackhole" ;;
        2) echo "sounddevice" ;;
        3) echo "pyaudio" ;;
        4|*) echo "auto" ;;
    esac
}

# Update configuration
update_config() {
    local backend="$1"
    
    echo
    print_info "Updating configuration..."
    
    if [ ! -f "config.yaml" ]; then
        cat > config.yaml << EOF
# Live Transcripts Configuration - macOS
# Auto-generated by configure-macos.sh

profile: macos

audio:
  backend_preference: $backend
  
# Run ./scripts/configure-macos.sh to reconfigure
EOF
        print_success "Created config.yaml"
    else
        # Update existing config
        if grep -q "backend_preference:" config.yaml; then
            sed -i '' "s/backend_preference:.*/backend_preference: $backend/" config.yaml
            print_success "Updated backend preference to: $backend"
        else
            # Add backend preference
            if grep -q "^audio:" config.yaml; then
                awk '/^audio:/ {print; print "  backend_preference: '$backend'"; next} 1' config.yaml > config.yaml.tmp
                mv config.yaml.tmp config.yaml
            else
                echo "" >> config.yaml
                echo "audio:" >> config.yaml
                echo "  backend_preference: $backend" >> config.yaml
            fi
            print_success "Added backend preference: $backend"
        fi
    fi
}

# Show tips
show_tips() {
    echo
    print_info "macOS Audio Tips:"
    echo "  - Always use the Multi-Output Device when running Live Transcripts"
    echo "  - You can create keyboard shortcuts to switch audio outputs"
    echo "  - Consider using SoundSource or Audio Hijack for advanced routing"
    echo "  - If you hear echo, mute your microphone during playback"
    echo
    print_info "Troubleshooting:"
    echo "  - No audio captured? Check Multi-Output Device setup"
    echo "  - Hearing echo? Lower speaker volume or use headphones"
    echo "  - BlackHole not working? Try reinstalling with brew reinstall"
}

# Main
main() {
    echo "üçé macOS Audio Configuration for Live Transcripts"
    echo "================================================"
    
    # Check macOS version
    check_macos_version
    
    # Check for BlackHole
    if ! check_blackhole; then
        setup_blackhole
        # Re-check after potential installation
        check_blackhole
    fi
    
    # Configure Multi-Output Device
    configure_multi_output
    
    # Verify setup
    verify_audio_setup
    
    # Choose backend
    selected_backend=$(choose_backend)
    print_success "Selected backend: $selected_backend"
    
    # Update configuration
    update_config "$selected_backend"
    
    # Show tips
    show_tips
    
    echo
    print_success "macOS audio configuration complete! üéâ"
    echo
    print_warning "Remember: Always set 'Live Transcripts Setup' as your audio output!"
}

# Run main
main "$@"